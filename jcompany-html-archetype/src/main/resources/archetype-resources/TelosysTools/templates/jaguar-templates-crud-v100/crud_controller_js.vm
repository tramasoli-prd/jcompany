#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#set( $dollarSymbol= "$" )
(function() {
  'use strict';

  angular.module('${PROJECT_NAME}').controller('${entity.name}Controller', ${entity.name}Controller );

  /** @ngInject */
  function ${entity.name}Controller(${dollarSymbol}scope, ${dollarSymbol}controller, ${entity.name}Service) {
    var vm = this;
		${dollarSymbol}scope.${dollarSymbol}baseService = ${entity.name}Service;
	    ${dollarSymbol}scope.${dollarSymbol}baseRoute = '${uncapitalizedEntityName}';

		${dollarSymbol}scope.detalhes = [];
	  #foreach($link in $entity.selectedLinks)
		#if($link.isCardinalityOneToMany())
	#set($nameDetail = ${fn.firstCharToUpperCase($link.formattedFieldName(0))})


    ${dollarSymbol}scope.detalhes.push(
      {
        titulo: "${nameDetail}",
		name: "$fn.uncapitalize(${nameDetail})",
        template: "app/${uncapitalizedEntityName}/${uncapitalizedEntityName}_${fn.uncapitalize($link.formattedFieldName(0))}.html"
      }
	);

		#end
	  #end


 	#foreach($link in $entity.selectedLinks)
		#if($link.isCardinalityOneToMany())


	  ${generator.generate(
					$link.targetTableName ,
					"${uncapitalizedEntityName}_${fn.uncapitalize($link.formattedFieldName(0))}.html",
					$target.folder,
					"crud_det_html.vm" )}
		#end
      #end

	${dollarSymbol}scope.columnDefs = [
                         { field: 'id', displayName: 'label.${uncapitalizedEntityName}.id', headerCellFilter:'translate', width: '10%'}
 		//,{ field: 'nome', displayName: 'Nome', headerCellFilter:'translate', width: '25%'}
        //,{ field: 'email', displayName: 'E-mail', headerCellFilter:'translate', width: '20%'}
        //,{ field: 'cpf', displayName: 'CPF', headerCellFilter:'translate', width: '15%'}
        //,{ field: 'dataNascimento', displayName: 'Nascimento', width: '10%', headerCellFilter:'translate', cellFilter: 'date:\'dd/MM/yyyy\''}
        //,{ field: 'departamento.descricao', displayName: 'Departamento', headerCellFilter:'translate', width: '20%'}
                ]

    angular.extend(vm, ${dollarSymbol}controller('PlcBaseController', {${dollarSymbol}scope: ${dollarSymbol}scope}));
  }
})();


